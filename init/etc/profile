# /etc/profile
#
# System wide environment and startup programs.

# set -x

# Set default path (/usr/sbin:/sbin:/bin included for non-KISS Linux chroots).
export PATH=/usr/local/sbin:/usr/local/bin:/usr/bin:/usr/sbin:/sbin:/bin

# Set default umask.
umask 022

alias /='eval'
alias //='lineno="$LINENO"'

# share folder initialization
[ ! -z "${SHARE_PREFIX:+x}" ] || {
	[ -d "/mnt/init" ] &&
	{ SHARE_PREFIX="/mnt" && export SHARE_PREFIX; } || {
		[ -d "/opt/init" ] &&
		{ SHARE_PREFIX="/opt" && export SHARE_PREFIX; } ||
		printf '%s %s\n' '$SHARE_PREFIX' "not found"
	}
}

_functions="$SHARE_PREFIX/init/functions"
[ ! -f "$_functions" ] && {
	printf '%s %s\n' '$_functions' "'$_functions' does not exist"
	exit 0
} || {
	env_reset_type="$(type "env_reset" > /dev/null && type "env_reset")" || :
	[ ! -z "${env_reset_type:+x}" ] ||
		. "$_functions"
}

# case "$(type env_reset)" in *"function"*|*"alias"*) ;;
# 	*)
# 	_env_reset() {
# 		local env_key_name="${1:?"env_reset needs a key"}"
# 		local env_value="${2:?"env_reset '$1' needs a value"}"
# 		/ "[ \"\${$env_key_name-}\" = \"$env_value\" ]" || {
# 			# / "echo \"Original \\$\$env_key_name = \${$env_key_name-}\""
# 			/ "$env_key_name=\"$env_value\"" && / "export \"$env_key_name\""
# 		}
# 	}
# 	alias env_reset='_env_reset'
# esac

[ ! -f "/etc/hostname" ] ||
// env_reset os_name "$(cat /etc/hostname 2> /dev/null)"
# : ${os_name:="$(cat /etc/hostname 2> /dev/null)"}
# : ${os_name:="$(awk -F = '$1 == "ID" {print $2}' < /etc/os-release)"}
// env_reset id "$(awk -F = '$1 == "ID" {print $2}' < /etc/os-release |
	tr '[A-Z]' '[a-z]')"
// env_reset os_pretty_name "$(
awk -F = '$1 == "PRETTY_NAME" {print $2}' < /etc/os-release | tr -d "\"" |
	tr '[A-Z]' '[a-z]')"
# : ${os_pretty_name:="$(awk -F = '$1 == "PRETTY_NAME" {print $2}' < /etc/os-release)"}

case "${id-} ${os_name-} ${os_pretty_name-}" in *"kiss"*)
	IS_KISS= && export IS_KISS
	# Will repeat shell errors report
	# trap '"${LINENO-}" "${FUNCNAME-}" "${0-}"' ERR || :
esac

// env_reset UID "$(id -u)"
# : "${LOGNAME:="$(id -nu)"}" && export LOGNAME
// env_reset LOGNAME "$(id -nu)"
#
# : "${HOME:="$(/usr/bin/awk -F : -v v="${LOGNAME}" \
#   "\$1 == v {print \$6}" /etc/passwd)"}" && export HOME
// env_reset HOME "$(/usr/bin/awk -F : -v v="${LOGNAME}" \
	"\$1 == v {print \$6}" /etc/passwd)"

# home="$(/usr/bin/awk -F : -v v="${LOGNAME}" "\$1 == v {print \$6}" /etc/passwd)"
# [ "$home" = "$HOME" ] || {
#     HOME="$home" && export HOME
#     echo "Fixed \$HOME = $HOME"
# }

// env_reset LAYOUT_INIT "${SHARE_PREFIX}/init/etc/profile.d/share"

[ ! -z "${loaded_share+x}" ] ||
[ ! -f "$LAYOUT_INIT" ] || {
	printf '%s %s %s\n' '$LAYOUT_INIT' "$LAYOUT_INIT" "is sourced"
	. "$LAYOUT_INIT"
}

# Try to tell I'm runing in a chroot. Equal means not in a chroot
# Not equal (contains) means in a chroot (being_in_chroot=0), then
# ignore the tmux application, etc.
# case "$(type is_chrooted)" in *"function"*|*"alias"*) ;;
# 	*)
# 		_is_chrooted() {
# 			# Is chrooted
# 			local being_in_chroot=0
# 			local root_pid=
# 			[ ! -f "/proc/1/mountinfo" ] ||
# 			root_pid="$(awk '$5 == "/" {print $1}' < /proc/1/mountinfo)"
# 			local pid_list=
# 			[ ! -f "/proc/$$/mountinfo" ] ||
# 			pid_list="$(awk '$5 == "/" {print $1}' < /proc/$$/mountinfo)"
# 			# Is chrooted
# 			local is_pid_contained=1
#
# 			case " $pid_list " in
# 				# Not chrooted
# 				*" $root_pid "*) is_pid_contained=0
# 			esac
#
# 			[ "$is_pid_contained" -ne "0" ] ||
# 			# Not chrooted
# 				being_in_chroot=1
#
# 			return $being_in_chroot
# 		}
# 		alias is_chrooted='_is_chrooted'
# esac

# Load profiles from /etc/profile.d
is_chrooted && {
	_kiss_env="${SHARE_PREFIX}/init/etc/profile.d/kiss-env"
	[ ! -f "$_kiss_env" ] ||
	. "$_kiss_env"
	_xdg_runtime="${SHARE_PREFIX}/init/etc/profile.d/xdg-runtime-dir"
	[ ! -f "$_xdg_runtime" ] ||
	. "$_xdg_runtime"
} ||
for file in /etc/profile.d/*.sh; do
	# [ ! -r "$file" ] && {
	#   [ ! -f "$SHARE_PREFIX/init/etc/profile.d/share" ] || {
	#       . "$SHARE_PREFIX/init/etc/profile.d/share"
	#       [ ! -r "$file" ] &&
	#           printf '%s %s\n' "$file" "can't be recovered" && continue ||
	#           . "$file"
	#   }
	# } ||
	. "$file"
done

[ "$UID" != "0" ] || dmesg -n 1
# ! command -v "/usr/bin/doas" > /dev/null 2>&1 ||
# doas dmesg -n 1

# setterm -initialize
# echo 5 | doas tee /sys/module/vt/parameters/cur_default
unset file
export loaded_profile=
