#! /bin/sh

# share folder initialization
[ ! -z "${SHARE_PREFIX:+x}" ] || {
	[ -d "/mnt/init" ] &&
	{ SHARE_PREFIX="/mnt" && export SHARE_PREFIX; } || {
		[ -d "/opt/init" ] &&
		{ SHARE_PREFIX="/opt" && export SHARE_PREFIX; } ||
		printf '%s %s\n' '$SHARE_PREFIX' "not found"
	}
}

_functions="$SHARE_PREFIX/init/functions"
[ ! -f "$_functions" ] && {
	printf '%s %s\n' '$_functions' "'$_functions' does not exist"
	exit 0
} || {
	env_reset_type="$(type "env_reset" > /dev/null && type "env_reset")" || :
	[ ! -z "${env_reset_type:+x}" ] ||
		. "$_functions"
}

# case "$(type env_reset)" in *"function"*|*"alias"*) ;;
# 	*)
# 	_env_reset() {
# 		local env_key_name="${1:?"env_reset needs a key"}"
# 		local env_value="${2:?"env_reset '$1' needs a value"}"
# 		/ "[ \"\${$env_key_name-}\" = \"$env_value\" ]" || {
# 			# / "echo \"Original \\$\$env_key_name = \${$env_key_name-}\""
# 			/ "$env_key_name=\"$env_value\"" && / "export \"$env_key_name\""
# 		}
# 	}
# 	alias env_reset='_env_reset'
# esac

# : ${UID="$(id -u)"} && export UID
// env_reset UID "$(id -u)"
[ -n "${UID:+x}" ] || printf '%s %s\n' '$UID' "$UID"

# : "${LOGNAME:="$(id -nu)"}" && export LOGNAME
// env_reset LOGNAME "$(id -nu)"
# : "${HOME:="$(/usr/bin/awk -F : -v v="${LOGNAME}" \
#	"\$1 == v {print \$6}" /etc/passwd)"}" && export HOME
// env_reset HOME "$(/usr/bin/awk -F : -v v="${LOGNAME}" \
	"\$1 == v {print \$6}" /etc/passwd)"

# home="$(/usr/bin/awk -F ":" -v v="${LOGNAME}" "\$1 == v {print \$6}" /etc/passwd)"
# [ "$home" = "$HOME" ] || {
#	  HOME="$home"
#	  export HOME
#	  echo "Fixed \$HOME = $HOME"
# }
[ -n "${LOGNAME:+x}" ] ||
printf '%s %s\n' '$LOGNAME' "$LOGNAME"
[ -n "${HOME:+x}" ] ||
printf '%s %s\n' '$HOME' "$HOME"

# : ${XDG_DATA_HOME:="$HOME/.local/share"} && export XDG_DATA_HOME
// env_reset XDG_DATA_HOME "$HOME/.local/share"
[ -d "${XDG_DATA_HOME}" ]	|| \mkdir -p "${XDG_DATA_HOME}"

# : ${XDG_CACHE_HOME:="$HOME/.cache"} && export XDG_CACHE_HOME
// env_reset XDG_CACHE_HOME "$HOME/.cache"
[ -d "${XDG_CACHE_HOME}" ]	|| \mkdir -p "${XDG_CACHE_HOME}"

# : ${XDG_CONFIG_HOME:="$HOME/.config"} && export XDG_CONFIG_HOME
// env_reset XDG_CONFIG_HOME "$HOME/.config"
[ -d "${XDG_CONFIG_HOME}" ] || \mkdir -p "${XDG_CONFIG_HOME}"

# expect_xdg_runtime_dir="/run/user/$UID"
# [ "${XDG_RUNTIME_DIR}" = "$expect_xdg_runtime_dir" ] ||
# # [ ! -z "${XDG_RUNTIME_DIR+x}" ] || {
# #
# : ${XDG_RUNTIME_DIR="/run/user/$UID"} && export XDG_RUNTIME_DIR
# [ "${XDG_RUNTIME_DIR}" = "$expect_xdg_runtime_dir" ] ||
# XDG_RUNTIME_DIR="/run/user/$UID" && export XDG_RUNTIME_DIR
// env_reset XDG_RUNTIME_DIR "/run/user/$UID"

# [ "${XDG_RUNTIME_DIR}" = "$expect_xdg_runtime_dir" ] ||
# printf '%s %s\n' '$XDG_RUNTIME_DIR' "$XDG_RUNTIME_DIR"

[ -d "${XDG_RUNTIME_DIR}" ] || \mkdir -p "${XDG_RUNTIME_DIR}"

group_name="$UID"
case "$(id $LOGNAME)" in *"users"*)
	group_name="users"
esac
# [ "$(stat -L -c '%u' "$XDG_RUNTIME_DIR")" = "$UID" ] ||
[ "$(\ls -dl "$XDG_RUNTIME_DIR" | awk '{print $3}')" = "$UID" ] ||
	chown -R $UID:$group_name "${XDG_RUNTIME_DIR}"

# perm="$(stat -L -c '%A' "$XDG_RUNTIME_DIR")"
# [ "$(stat -L -c '%A' "$XDG_RUNTIME_DIR")" = "drwx------" ] ||
[ "$(\ls -dl "$XDG_RUNTIME_DIR" | awk '{print $1}')" = "drwx------" ] ||
	chmod 0700 "${XDG_RUNTIME_DIR}"

# [ "$DBUS_SESSION_BUS_ADDRESS" = "unix:path=$XDG_RUNTIME_DIR/bus" ] ||
# : ${DBUS_SESSION_BUS_ADDRESS="unix:path=$XDG_RUNTIME_DIR/bus"} &&
# export DBUS_SESSION_BUS_ADDRESS
// env_reset DBUS_SESSION_BUS_ADDRESS "unix:path=$XDG_RUNTIME_DIR/bus"

# }
