#!/bin/sh

# Calling sequence
# share->profile->shrc->env

# How to use
# share -s /mnt -h $HOME

# set -eu

# # shellcheck disable=SC2034
# VERSION="0.1"

# parser_definition() {
#   setup   REST help:usage -- "Usage: example.sh [options]... [arguments]..." ''
#   msg -- 'Options:'
#   flag    FLAG      -f --flag                  -- "takes no arguments"
#   param   SHARE_PREFIX -s --share_root            -- "share shell scripts root"
#   param   HOME  -h --home                  -- "should be applied user home"
#   option  OPTION    -o --option on:"default"   -- "takes one optional argument"
#   disp    :usage    -h --help
#   disp    VERSION   --version
# }
#
# [ "${GETOPTIONS:-}" ] && return 0
#
# case ${MODE:-command} in
#   command | library)
#     if [ "${MODE:-}" = "library" ]; then
#       # shellcheck disable=SC1091
#       . ./getoptions-library.sh
#     fi
#     eval "$(getoptions parser_definition -) exit 1" ;;
#   parser)
#     # shellcheck disable=SC1091
#     . ./getoptions-parser.sh ;;
# esac
#
# echo "FLAG: $FLAG, SHARE_PREFIX: $SHARE_PREFIX, HOME: $HOME, OPTION: $OPTION"
# printf '%s\n' "$@"

# if [ -d "/opt/init" ]; then
#     export SHARE_PREFIX="/mnt"
# elif [ -d "/mnt/init" ]; then

[ ! -d "/mnt/init" ] || [ ! -z "${SHARE_PREFIX+x}" ] || export SHARE_PREFIX="/mnt"

# if ! [ -z "${USE_SHELDON}" ]; then
#   if ! [ -d ${SHELDON_CONFIG_DIR} ]; then
#     mkdir -p ${SHELDON_CONFIG_DIR}
#   fi
#
#   if ! [ -d ${SHELDON_DATA_DIR} ]; then
#     mkdir -p ${SHELDON_DATA_DIR}
#
#     if ! [ -d ${SHELDON_DATA_DIR}/repos ]; then
#       mkdir -p ${SHELDON_DATA_DIR}/repos
#     fi
#
#     if ! [ -d ${SHELDON_DATA_DIR}/downloads ]; then
#       mkdir -p ${SHELDON_DATA_DIR}/downloads
#     fi
#   fi
# fi

# if [ "$SHELL" = "zsh" ]; then
#   ln -sf ${SHARE_PREFIX}/init/shell/zsh ${HOME}/.zinit
#   ln -sf ${SHARE_PREFIX}/init/shell/zsh/zshrc ${HOME}/.zshrc
#   ln -sf ${SHARE_PREFIX}/init/shell/zsh/zshenv ${HOME}/.zshenv
#   ln -sf ${SHARE_PREFIX}/init/shell/zsh/zlogin ${HOME}/.zlogin
#   ln -sf ${SHARE_PREFIX}/init/shell/zsh/zprofile ${HOME}/.zprofile
# fi

link_correct() {
    local target="$1"
    local anchor="$2"
    [ -h "$anchor" ] ||
        doas \rm -rf "$anchor"

    [ "$(readlink -fn "$anchor")" == "$target" ] || {
        local anchor_dir="${anchor%/*}"
        [ -d "$anchor_dir" ] || doas \mkdir -p "$anchor_dir"
        doas \ln -sf "$target" "$anchor"
    }
}

link_correct "${SHARE_PREFIX}/init/xdg_runtime_dir" "/etc/profile.d/xdg_runtime_dir.sh"
link_correct "${SHARE_PREFIX}/init/iwl" "/etc/profile.d/iwl.sh"
link_correct "${SHARE_PREFIX}/init/kiss-env" "/etc/profile.d/kiss-env.sh"

link_correct "${SHARE_PREFIX}/init/xdg_runtime_dir" "$HOME/.xdg_runtime_dir"
[ -n "${XDG_CONFIG_HOME:+x}" ] ||
. "$HOME/.xdg_runtime_dir"

link_correct "${SHARE_PREFIX}/init/wayland/env" "${XDG_CONFIG_HOME}/wayland/env"

link_correct "${SHARE_PREFIX}/init/profile" "${HOME}/.profile"
link_correct "${SHARE_PREFIX}/init/ashrc" "${HOME}/.ashrc"
link_correct "${SHARE_PREFIX}/init/terminal/tmux.conf" "${HOME}/.tmux.conf"
link_correct "${SHARE_PREFIX}/init/terminal/tmux" "${HOME}/.tmux"
link_correct "${SHARE_PREFIX}/init/editor/nvim/init.vim" "${HOME}/.vimrc"
link_correct "${SHARE_PREFIX}/init/editor/vim" "${HOME}/.vim"
link_correct "${SHARE_PREFIX}/init/editor/nvim" "${XDG_CONFIG_HOME}/nvim"

[ ! -L "${XDG_DATA_HOME}/nvim" ] || \rm -f "${XDG_DATA_HOME}/nvim"
[ -d "${XDG_DATA_HOME}/nvim" ] || mkdir -p "${XDG_DATA_HOME}/nvim"

[ ! -L "${XDG_DATA_HOME}/nvim/site" ] || \rm -f "${XDG_DATA_HOME}/nvim/site"
[ -d "${XDG_DATA_HOME}/nvim/site" ] || \mkdir -p "${XDG_DATA_HOME}/nvim/site"

# Default editor packages is based on musl libc on current system
link_correct "${SHARE_PREFIX}/init/editor/nvim/site/pack" \
    "${XDG_DATA_HOME}/nvim/site/pack"
# If you have additional musl libc builds of the editor
# ! expr "$KISS_XHOST_ABI" : "musl" > /dev/null 2>&1 ||
# link_correct "${SHARE_PREFIX}/init/editor/nvim/site/pack-musl" \
#     "${XDG_DATA_HOME}/nvim/site/pack"

[ ! -L "${XDG_DATA_HOME}/nvim/site/parser" ] ||
\rm -f "${XDG_DATA_HOME}/nvim/site/parser"
[ -d "${XDG_DATA_HOME}/nvim/site/parser" ] ||
\mkdir -p "${XDG_DATA_HOME}/nvim/site/parser"

# [ ! -L ${XDG_CONFIG_HOME}/coc ] ||
#     \rm -f ${XDG_CONFIG_HOME}/coc
# \ln -sf ${SHARE_PREFIX}/init/editor/coc ${XDG_CONFIG_HOME}/coc
