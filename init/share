# #!/usr/bin/env sh

# How to use
# share -s /opt -h $HOME

# set -eu

# # shellcheck disable=SC2034
# VERSION="0.1"

# parser_definition() {
#   setup   REST help:usage -- "Usage: example.sh [options]... [arguments]..." ''
#   msg -- 'Options:'
#   flag    FLAG      -f --flag                  -- "takes no arguments"
#   param   SHARE_PREFIX -s --share_root            -- "share shell scripts root"
#   param   HOME  -h --home                  -- "should be applied user home"
#   option  OPTION    -o --option on:"default"   -- "takes one optional argument"
#   disp    :usage    -h --help
#   disp    VERSION   --version
# }
#
# [ "${GETOPTIONS:-}" ] && return 0
#
# case ${MODE:-command} in
#   command | library)
#     if [ "${MODE:-}" = "library" ]; then
#       # shellcheck disable=SC1091
#       . ./getoptions-library.sh
#     fi
#     eval "$(getoptions parser_definition -) exit 1" ;;
#   parser)
#     # shellcheck disable=SC1091
#     . ./getoptions-parser.sh ;;
# esac
#
# echo "FLAG: $FLAG, SHARE_PREFIX: $SHARE_PREFIX, HOME: $HOME, OPTION: $OPTION"
# printf '%s\n' "$@"

# if [ -d "/opt/init" ]; then
#     export SHARE_PREFIX="/opt"
# elif [ -d "/mnt/init" ]; then

[ ! -d "/mnt/init" ] || [ ! -z "${SHARE_PREFIX+x}" ] || export SHARE_PREFIX="/mnt"

# if ! [ -z "${USE_SHELDON}" ]; then
#   if ! [ -d ${SHELDON_CONFIG_DIR} ]; then
#     mkdir -p ${SHELDON_CONFIG_DIR}
#   fi
#
#   if ! [ -d ${SHELDON_DATA_DIR} ]; then
#     mkdir -p ${SHELDON_DATA_DIR}
#
#     if ! [ -d ${SHELDON_DATA_DIR}/repos ]; then
#       mkdir -p ${SHELDON_DATA_DIR}/repos
#     fi
#
#     if ! [ -d ${SHELDON_DATA_DIR}/downloads ]; then
#       mkdir -p ${SHELDON_DATA_DIR}/downloads
#     fi
#   fi
# fi

# if [ "$SHELL" = "zsh" ]; then
#   ln -sf ${SHARE_PREFIX}/init/shell/zsh ${HOME}/.zinit
#   ln -sf ${SHARE_PREFIX}/init/shell/zsh/zshrc ${HOME}/.zshrc
#   ln -sf ${SHARE_PREFIX}/init/shell/zsh/zshenv ${HOME}/.zshenv
#   ln -sf ${SHARE_PREFIX}/init/shell/zsh/zlogin ${HOME}/.zlogin
#   ln -sf ${SHARE_PREFIX}/init/shell/zsh/zprofile ${HOME}/.zprofile
# fi

[ ! -f "$HOME/.xdg_runtime_dir" ] ||
\rm -f "$HOME/.xdg_runtime_dir"
[ "$(readlink "$HOME/.xdg_runtime_dir")" = "${SHARE_PREFIX}/init/xdg_runtime_dir" ] ||
\ln -sf "${SHARE_PREFIX}/init/xdg_runtime_dir" "$HOME/.xdg_runtime_dir"
. "$HOME/.xdg_runtime_dir"

# ${XDG_CONFIG_HOME}/wayland/env -> ${SHARE_PREFIX}/init/wayland/env
[ ! -f "${XDG_CONFIG_HOME}/wayland/env" ] ||
\rm -f "${XDG_CONFIG_HOME}/wayland/env"

[ "$(readlink "${XDG_CONFIG_HOME}/wayland/env")" = \
"${SHARE_PREFIX}/init/wayland/env" ] || {
    [ -d "${XDG_CONFIG_HOME}/wayland" ] || \mkdir -p "${XDG_CONFIG_HOME}/wayland"
    \ln -sf "${SHARE_PREFIX}/init/wayland/env" "${XDG_CONFIG_HOME}/wayland/env"
}

[ ! -f "${HOME}/.profile" ] || \rm -f "${HOME}/.profile"
[ "$(readlink ${HOME}/.profile)" = "${SHARE_PREFIX}/init/profile" ] ||
\ln -sf "${SHARE_PREFIX}/init/profile" "${HOME}/.profile"

[ ! -f "${HOME}/.ashrc" ] || \rm -f "${HOME}/.ashrc"
[ "$(readlink ${HOME}/.ashrc)" = "${SHARE_PREFIX}/init/ashrc" ] ||
\ln -sf "${SHARE_PREFIX}/init/ashrc" "${HOME}/.ashrc"

[ ! -f "${HOME}/.tmux.conf" ] || \rm -f "${HOME}/.tmux.conf"

[ "$(readlink ${HOME}/.tmux.conf)" = "${SHARE_PREFIX}/init/terminal/tmux.conf" ] ||
\ln -sf "${SHARE_PREFIX}/init/terminal/tmux.conf" "${HOME}/.tmux.conf"

[ ! -d "${HOME}/.tmux" ] || \rm -rf "${HOME}/.tmux"

[ "$(readlink ${HOME}/.tmux)" = "${SHARE_PREFIX}/init/terminal/tmux" ] ||
\ln -sf "${SHARE_PREFIX}/init/terminal/tmux" "${HOME}/.tmux"

[ ! -f "${HOME}/.vimrc" ] || \rm -f "${HOME}/.vimrc"

[ "$(readlink ${HOME}/.vimrc)" = \
"${SHARE_PREFIX}/init/editor/nvim/init.vim" ] ||
\ln -sf "${SHARE_PREFIX}/init/editor/nvim/init.vim" "${HOME}/.vimrc"

[ ! -d "${HOME}/.vim" ] || \rm -rf "${HOME}/.vim"

[ "$(readlink ${HOME}/.vim)" = "${SHARE_PREFIX}/init/editor/vim" ] ||
\ln -sf "${SHARE_PREFIX}/init/editor/vim" "${HOME}/.vim"

[ ! -d "${XDG_CONFIG_HOME}/nvim" ] || \rm -rf "${XDG_CONFIG_HOME}/nvim"

if [ -f "${XDG_CONFIG_HOME}/nvim" ]; then
    [ "$(readlink ${XDG_CONFIG_HOME}/nvim)" = \
    "${SHARE_PREFIX}/init/editor/nvim" ] ||
    \ln -sf "${SHARE_PREFIX}/init/editor/nvim" "${XDG_CONFIG_HOME}/nvim"
else
    \ln -sf "${SHARE_PREFIX}/init/editor/nvim" "${XDG_CONFIG_HOME}/nvim"
fi

[ ! -L "${XDG_DATA_HOME}/nvim" ] || \rm -f "${XDG_DATA_HOME}/nvim"

[ -d "${XDG_DATA_HOME}/nvim" ] || mkdir -p "${XDG_DATA_HOME}/nvim"

[ ! -L "${XDG_DATA_HOME}/nvim/site" ] || \rm -f "${XDG_DATA_HOME}/nvim/site"

[ -d "${XDG_DATA_HOME}/nvim/site" ] || \mkdir -p "${XDG_DATA_HOME}/nvim/site"

[ ! -d "${XDG_DATA_HOME}/nvim/site/pack" ] ||
\rm -rf "${XDG_DATA_HOME}/nvim/site/pack"

# if expr "$OSTYPE" : "musl" 1>/dev/null; then
#     [ "$(readlink ${XDG_DATA_HOME}/nvim/site/pack)" = \
#     "${SHARE_PREFIX}/init/editor/nvim/site/pack-musl" ] || {
#         [ -d "${XDG_DATA_HOME}/nvim/site" ] || \mkdir -p "${XDG_DATA_HOME}/nvim/site"
#         \ln -sf "${SHARE_PREFIX}/init/editor/nvim/site/pack-musl" \
#         "${XDG_DATA_HOME}/nvim/site/pack"
#     }
# else
    [ "$(readlink ${XDG_DATA_HOME}/nvim/site/pack)" = \
    "${SHARE_PREFIX}/init/editor/nvim/site/pack" ] || {
        [ -d "${XDG_DATA_HOME}/nvim/site" ] || \mkdir -p "${XDG_DATA_HOME}/nvim/site"
        \ln -sf "${SHARE_PREFIX}/init/editor/nvim/site/pack" \
        "${XDG_DATA_HOME}/nvim/site/pack"
    }
# fi

[ ! -L "${XDG_DATA_HOME}/nvim/site/parser" ] ||
\rm -f "${XDG_DATA_HOME}/nvim/site/parser"

[ -d "${XDG_DATA_HOME}/nvim/site/parser" ] ||
\mkdir -p "${XDG_DATA_HOME}/nvim/site/parser"

# [ ! -L ${XDG_CONFIG_HOME}/coc ] ||
#     \rm -f ${XDG_CONFIG_HOME}/coc
# \ln -sf ${SHARE_PREFIX}/init/editor/coc ${XDG_CONFIG_HOME}/coc
