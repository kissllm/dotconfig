#!/bin/sh

[ -z "${SHELL_DEBUG+x}" ] || echo "In $HOME/.ashrc"

# share folder initialization
if [ -d "/mnt/init" ]; then
    export SHARE_PREFIX="/mnt"
elif [ -d "/opt/init" ]; then
    export SHARE_PREFIX="/opt"
fi

[ ! -d "${SHARE_PREFIX}/init" ] || [ ! -f "${SHARE_PREFIX}/init/env" ] || . ${SHARE_PREFIX}/init/env

tty_num=$(tty | sed -e "s/.*tty\(.*\)/\1/")
export tty_num=$tty_num

[ ! -d "${SHARE_PREFIX}/init" ] ||
[ ! -z "${DISPLAY+x}" ] ||
[ "1" != "$tty_num" ] ||
[ "$(/usr/bin/whoami)" = "root" ] || {
    ${SHARE_PREFIX}/init/sway-launch
    # ${SHARE_PREFIX}/init/velox-launch
    printf '%s' "${WAYLAND_DISPLAY}" > $HOME/.wayland_display
}

export DISPLAY=${WAYLAND_DISPLAY}

# https://discourse.ubuntu.com/t/environment-variables-for-wayland-hackers/12750
# https://unix.stackexchange.com/questions/330366/how-can-i-run-a-graphical-application-in-a-container-under-wayland
# https://stackoverflow.com/questions/41736528/linux-wayland-display-multiple-user
# XDG_RUNTIME_DIR defined in $HOME/.xdg_runtime_dir and sourced in ${SHARE_PREFIX}/init/env
[ -d "/tmp/wayland" ] || mkdir -p "/tmp/wayland"
[ -e "/tmp/wayland/.display" ] || touch "/tmp/wayland/.display"
if [ ! -z "${WAYLAND_DISPLAY+x}" ] && [ -z "$(cat /tmp/wayland/.display)" ]; then
    printf '%s' "${WAYLAND_DISPLAY}" > /tmp/wayland/.display
elif [ -n "$(cat /tmp/wayland/.display)" ] && [ -z ${WAYLAND_DISPLAY+x} ]; then
    export WAYLAND_DISPLAY="$(cat /tmp/wayland/.display)"
fi

# [ ! -s "$HOME/.luaver/luaver" ] || . $HOME/.luaver/luaver

# [ ! -f "${SHARE_PREFIX}/toolchain/env" ] || . ${SHARE_PREFIX}/toolchain/env

[ "$(/usr/bin/whoami)" = "root" ] ||
[ -f "/tmp/wpa.lock" ] ||
[ -x "/mnt/local/bin/wpa" ] ||
! command -v "/mnt/local/bin/wpa" > /dev/null 2>&1 ||
"/mnt/local/bin/wpa" >> $HOME/.config/wpa_supplicant/.wpa.log 2>&1

# https://stackoverflow.com/questions/5687446/how-can-i-shortern-my-command-line-prompts-current-directory
export pwd_length=13
export TRIMMED='printf "%s" $PWD | sed -re "s|(~?/[^/]*/).*(.{$pwd_length})|\1...\2|"'

# https://andidittrich.com/2019/10/busybox-fancy-cli-color-prompt-ps1.html
# If not running interactively, don't do anything
[ ! -z "${PS1+x}" ] || return
# set a fancy prompt (non-color, overwrite the one in /etc/profile)
if [ "$(id -u)" -eq "0" ]; then
    # root user
    # export PS1='\n\e[31m\e[1m\u@\h\e[0m \e[94m\w\n \e[31m\e[1m#\e[0m\e[0m\e[39m\e[49m '
    # export PS1='\e[31m\e[1m\u@\h\e[0m \e[94m\w\n \e[31m\e[1m#\e[0m\e[0m\e[39m\e[49m '
    # export PS1="[\e[1;31m\u\e[m@\e[1;24m${HOSTNAME}\e[m] [\$(date +%a\ %b\ %d,\ %H:%M:%S\ %Z\ %Y)]\n\e[0;39m[\w]\e[m \$ "
    # export PS1="[\e[1;31m\u\e[m@\e[1;24m${HOSTNAME}\e[m] \e[0;39m[\w]\e[m [\$(date +%a\ %b\ %d,\ %H:%M:%S\ %Z\ %Y)]\n\$ "
    # https://superuser.com/questions/301353/escape-non-printing-characters-in-a-function-for-a-bash-prompt/301355
    # https://stackoverflow.com/questions/19092488/custom-bash-prompt-is-overwriting-itself
    # export PS1='[\[\e[1;5m\]\u\[\e[m\]@\[\e[1;33m\]${HOSTNAME}\[\e[m\]] \[\e[0;39m\][$(eval $TRIMMED)]\[\e[m\] \$ '
    export PS1="[\[\e[1;5m\]\u\[\e[m\]@\[\e[1;24m\]${HOSTNAME}\[\e[m\]] \[\e[0;39m\][\w]\[\e[m\] [\$(date +%a\ %b\ %d,\ %H:%M:%S\ %Z\ %Y)]\n\$ "
else
    # non root
    # export PS1='\n\e[92m\e[1m\u@\h\e[0m \e[94m\w\n \e[92m\e[1m$\e[0m\e[0m\e[39m\e[49m '
    # export PS1='\e[92m\e[1m\u@\h\e[0m \e[94m\w\n \e[92m\e[1m$\e[0m\e[0m\e[39m\e[49m '
    # export PS1="[\e[1;36m\u\e[m@\e[1;33m${HOSTNAME}\e[m] [\$(date +%a\ %b\ %d,\ %H:%M:%S\ %Z\ %Y)]\n\e[0;32m[\w]\e[m \$ "
    # export PS1="[\e[1;36m\u\e[m@\e[1;33m${HOSTNAME}\e[m] \e[0;32m[\w]\e[m [\$(date +%a\ %b\ %d,\ %H:%M:%S\ %Z\ %Y)]\n\$ "
    # https://stackoverflow.com/questions/19092488/custom-bash-prompt-is-overwriting-itself
    # export PS1='[\[\e[1;5m\]\u\[\e[m\]@\[\e[1;33m\]${HOSTNAME}\[\e[m\]] \[\e[0;17m\][$(eval $TRIMMED)]\[\e[m\] \$ '
    export PS1="[\[\e[1;5m\]\u\[\e[m\]@\[\e[1;33m\]${HOSTNAME}\[\e[m\]] \[\e[0;32m\][\w]\[\e[m\] [\$(date +%a\ %b\ %d,\ %H:%M:%S\ %Z\ %Y)]\n\$ "
fi

# How do tell I'm runing in a chroot?
# https://unix.stackexchange.com/questions/14345/how-do-i-tell-im-running-in-a-chroot

# No root needed
# [ "$(awk '$5=="/" {print $1}' </proc/1/mountinfo)" != "$(awk '$5=="/" {print $1}' </proc/$$/mountinfo)" ]
# root permission needed
# if [ "$(stat -c %d:%i /)" != "$(stat -c %d:%i /proc/1/root/.)" ]; then
#     echo "We are chrooted!"
# else
#     echo "Business as usual"
# fi

parent_is_tmux=0
parent_id="$PPID"
while [ "$parent_id" -ne "1" ]
do
    process_name=$(ps auxft | grep $parent_id | grep -v "grep")
    [ "${process_name##*tmux*}" != "" ] || { parent_is_tmux=1; break; }
    parent_id=$(IFS=$'\n'; for item in $(ps auxft -o pid,ppid | grep $parent_id); do IFS=$' ' read -r _1 _2 < <(echo $item); [ "$_2" = "$parent_id" ] || echo $_2; done)
done

# [ "$(id -u)" -eq "0" ] ||
[ "$(awk '$5=="/" {print $1}' </proc/1/mountinfo)" != "$(awk '$5=="/" {print $1}' </proc/$$/mountinfo)" ] ||
[ ! -z "${TMUX+x}" ] || # [ -n "$(cat $SHARE_PREFIX/.tmux_lock)" ] ||
[ "$parent_is_tmux" -eq "1" ] ||
{ { [ -z "${WAYLAND_DISPLAY:+x}" ] || [ -z "${DISPLAY:+x}" ]; } && [ $tty_num = "1" ]; } ||
exec tmux new -As .

# [ -d "/tmp/tmux" ] || mkdir -p "/tmp/tmux"
# [ -e "/tmp/tmux/.lock" ] || touch "/tmp/tmux/.lock"
# if [ ! -z "${TMUX+x}" ] && [ -z "$(cat $SHARE_PREFIX/.tmux_lock)" ]; then
#     printf '%s' "${TMUX}" > $SHARE_PREFIX/.tmux_lock
# elif [ -n "$(cat $SHARE_PREFIX/.tmux_lock)" ] && [ -z ${TMUX+x} ]; then
#     export TMUX="$(cat $SHARE_PREFIX/.tmux_lock)"
# fi

# set ts=4 sw=4 tw=0 et :


# [ -s ~/.luaver/luaver ] && . ~/.luaver/luaver

