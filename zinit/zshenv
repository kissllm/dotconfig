#!/usr/bin/env sh

path=(/working/toolchain /build/toolchain/musl/include: /build/toolchain/musl: /usr/include/c++/v1: /usr/include/c++/10.2/x86_64-linux-musl: /usr/bin: /bin: /usr/local/bin: /opt: /usr/share/man: $path)
typeset -U path


# Set font when running in console. For hidpi screen
if [ $TERM = linux ]; then
    # terminus-font
    if [ -f "/usr/share/kbd/consolefonts/ter-124b.psf.gz" ]; then
        setfont /usr/share/kbd/consolefonts/ter-124b.psf.gz
    elif [ -f "/mnt/setfont/consolefonts/ter-124b.psf.gz" ]; then
        setfont /mnt/setfont/consolefonts/ter-124b.psf.gz
        # Use default font
    elif [ -f "/usr/share/kbd/consolefonts/LatGrkCyr-12x22.psfu.gz" ]; then
        setfont /usr/share/kbd/consolefonts/LatGrkCyr-12x22.psfu.gz
    elif [ -f "/usr/share/consolefonts/LatGrkCyr-12x22.psfu.gz" ]; then
        setfont /usr/share/consolefonts/LatGrkCyr-12x22.psfu.gz
    fi
fi

LLVM=1
LLVM_IAS=1

# zinit initialization
export SHARE_PREFIX="/opt"
export SRC_PREFIX="/working"
export BUILD_PREFIX="/build"

export HISTFILE="${HOME}/.ash_history"
export HISTSIZE="640000"
export SAVEHIST="${HISTSIZE}"

export EDITOR="/usr/bin/nvim"
export TMP="$HOME/tmp"
export TEMP="$TMP"
export TMPDIR="$TMP"

# Locales!
export LANG="en_US.UTF-8"
export LC_COLLATE="en_US.UTF-8"
export LC_CTYPE="en_US.UTF-8"
export LC_MESSAGES="en_US.UTF-8"
export LC_MONETARY="en_US.UTF-8"
export LC_NUMERIC="en_US.UTF-8"
export LC_TIME="en_US.UTF-8"
export LC_ALL="en_US.UTF-8"
if [ ! -d "${TMP}" ]; then mkdir "${TMP}"; fi

# Use hostname in TMUX_TMPDIR as $HOME may be on nfs.
TMUX_TMPDIR="${TMPDIR}/tmux-${HOST}-${UID}"
export TMUX_TMPDIR=${TMUX_TMPDIR}
# https://stackoverflow.com/questions/229551/how-to-check-if-a-string-contains-a-substring-in-bash/229585#229585
if [ "${PATH}" = "${PATH/^${HOME}\/bin/}" ]; then
    export PATH="${HOME}/bin:${PATH}"
    export PATH="${HOME}/.local/bin:${PATH}"
fi

if [ "${PATH}" = "${PATH/^${HOME}\/.emacs.d\/bin/}" ]; then
    export PATH="${HOME}/.emacs.d/bin:${PATH}"
fi

if [ "${PATH}" = "${PATH/\/opt\/local\/bin/}" ]; then
    export PATH="/opt/local/bin:${PATH}"
fi
# For npm
if [ "${PATH}" = "${PATH/^${HOME}\/node\/bin/}" ]; then
    export PATH=${HOME}/node/bin:$PATH
fi

if [ "${PATH}" = "${PATH/\opt\/deno\/bin/}" ]; then
    export PATH=/opt/deno/bin:$PATH
fi
# For chroot tools I put it there
if [ "${PATH}" = "${PATH/\/mnt/}" ]; then
    export PATH=/mnt:$PATH
fi

# https://github.com/luarocks/luarocks/wiki/Using-LuaRocks
# eval $(luarocks path)
# eval "$(luarocks-5.1 path --bin)"
eval "$(/usr/bin/luarocks path --bin)"

# Colors.
red='\e[0;31m'
RED='\e[1;31m'
green='\e[0;32m'
GREEN='\e[1;32m'
yellow='\e[0;33m'
YELLOW='\e[1;33m'
blue='\e[0;34m'
BLUE='\e[1;34m'
purple='\e[0;35m'
PURPLE='\e[1;35m'
cyan='\e[0;36m'
CYAN='\e[1;36m'
NC='\e[0m'

# Aliases
alias cp="cp -iv"
alias rcp="rsync -v --progress"
alias rmv="rsync -v --progress --remove-source-files"
alias mv="mv -iv"
alias rm="rm -iv"
alias rmdir="rmdir -v"
alias ln="ln -v"
alias chmod="chmod -c"
alias chown="chown -c"
alias mkdir="mkdir -v"
# alias dotconfig="doas /usr/bin/git --git-dir=/home/dotconfig --work-tree=/home"

if command -v colordiff > /dev/null 2>&1; then
    alias diff="colordiff -Nuar"
else
    alias diff="diff -Nuar"
fi

# alias grep="grep --colour=auto"
# alias egrep="egrep --colour=auto"
# alias ls="ls --color=auto --human-readable --group-directories-first --classify"
alias ls="ls --color=auto -h --group-directories-first -F"
# alias ll="ls --color=auto --human-readable --group-directories-first --classify -l"
alias ll="ls --color=auto -h --group-directories-first -F -la"
alias la="ls --color=auto -h --group-directories-first -F -lathr"
# alias vim="/usr/bin/vim-huge"
alias nv="/usr/bin/nvim"
if [ -e "/usr/bin/vim-huge" ] ; then
    alias vi="/usr/bin/vim-huge"
elif [ -e "/usr/bin/vim" ] ; then
    alias vi="/usr/bin/vim"
fi

# if [ ! -d "${TMUX_TMPDIR}" ]; then command mkdir -p "${TMUX_TMPDIR}"; fi
# If tmux boot operation failed, run: rm -rf $HOME/tmp/tmux-*
alias tmux="if [ ! -d "${TMUX_TMPDIR}" ]; then command mkdir -p "${TMUX_TMPDIR}"; fi; tmux -2 2>&1 > ${TMUX_TMPDIR}/.tmux.log"

alias history="history 1 -1"


export INPUT_METHOD=fcitx
export GTK_IM_MODULE=fcitx    # export GTK_IM_MODULE=wayland
export QT_IM_MODULE=fcitx
export QT4_IM_MODULE=fcitx
export XMODIFIERS="@im=fcitx"
export XIM_SERVERS=fcitx

export QT_QPA_PLATFORMTHEME=qt5ct
export QT_PLATFORM_PLUGIN=qt5ct
export QT_PLATFORMTHEME=qt5ct
export QT_WAYLAND_DISABLE_WINDOWDECORATION="1"
#   export QT_WAYLAND_FORCE_DPI=physical
export QT_WAYLAND_FORCE_DPI=0

export QT_AUTO_SCREEN_SCALE_FACTOR=0
export QT_SCALE_FACTOR=1

# GDK_SCALE allows only Integer values, GDK_DPI_SCALE=x allows decimal values such as . GDK_DPI_SCALE=0.66
# export GDK_SCALE=0
export GDK_SCALE=2.0
# export GDK_DPI_SCALE=0
export GDK_DPI_SCALE=0.75


# https://forum.obarun.org/viewtopic.php?id=855
export DBUS_SESSION_ADDRESS=unix:path=/run/usr/${UID}/bus
export DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/${UID}/bus
export KWIN_DRM_USE_EGL_STREAMS=1


export DENO_INSTALL="${SHARE_PREFIX}/deno"
export PATH="$DENO_INSTALL/bin:$PATH"


if [[ $TERM == xterm ]]; then TERM=xterm-256color; fi

# [Running ncurses program that uses funky glyphs in alacritty freezes sway](https://github.com/swaywm/sway/issues/5417)
export WLR_DRM_NO_ATOMIC=1
export WLR_DRM_NO_MODIFIERS=1

XDG_CACHE_HOME=${XDG_CACHE_HOME:-$HOME/.cache}
export XDG_CACHE_HOME=${XDG_CACHE_HOME:-$HOME/.cache}
# https://github.com/zdharma/zinit/issues/197
ZSH_CACHE_DIR=${XDG_CACHE_HOME}/zinit
export ZSH_CACHE_DIR=${XDG_CACHE_HOME}/zinit

# export QT_STYLE_OVERRIDE=gtkexport
export QT_STYLE_OVERRIDE=qt5ct-style
# export QT_GRAPHICSSYSTEM=native
# export QT_GRAPHICSSYSTEM=native
# export QT_GRAPHICSSYSTEM=raster
export QT_GRAPHICSSYSTEM=opengl
export QT_WAYLAND_DISABLE_WINDOWDECORATION=1
export QT_SCREEN_SCALE_FACTORS=1
# https://doc.qt.io/qt-6/qtwaylandcompositor-index.html
export QT_QPA_PLATFORM=wayland-egl
export QT_QPA_PLATFORMTHEME=qt5ct
export QT_SCALE_FACTOR=0
# True or False
# export QT_AUTO_SCREEN_SCALE_FACTOR=1
export QT_AUTO_SCREEN_SCALE_FACTOR=0
export QT_WAYLAND_FORCE_DPI=0
# export XKB_DEFAULT_LAYOUT=us,cn
export XKB_DEFAULT_LAYOUT=us
export XKB_DEFAULT_VARIANT=us
# export XKB_DEFAULT_MODEL=pc105
export XKB_DEFAULT_MODEL=pc101
export XKB_DEFAULT_OPTIONS=grp:win_space_toggle
# https://docs.voidlinux.org/config/graphical-session/wayland.html
export XDG_SESSION_TYPE=wayland

# https://docs.voidlinux.org/config/graphical-session/wayland.html
# https://news.ycombinator.com/item?id=24236003
export MOZ_ENABLE_WAYLAND=1
export MOZ_WEBRENDER=1
export MOZ_USE_XINPUT2=1

# export WAYLAND_DISPLAY=wayland

# GDK_SCALE allows only Integer values, GDK_DPI_SCALE=x allows decimal values such as . GDK_DPI_SCALE=0.66
# export GDK_SCALE=0
export GDK_SCALE=2.0
# export GDK_DPI_SCALE=0
export GDK_DPI_SCALE=0.625
export GDK_DPI_SCALE=0.75

export XDG_SCREENSHOTS_DIR=$HOME/pictures/screenshots
export XDG_PICTURES_DIR=$HOME/pictures/screenshots

# # https://voidlinux.miraheze.org/wiki/GNOME/Keyring_-
# if [ -n "$DESKTOP_SESSION" ];then
#     eval $(gnome-keyring-daemon --start)
#     export SSH_AUTH_SOCK
# fi

export LIBGL_ALWAYS_SOFTWARE=1
export MOZ_ENABLE_WAYLAND=1

export XBPS_DISTDIR=${HOME}/.void-packages

# https://wiki.gentoo.org/wiki/Sway
# if test -z "${XDG_RUNTIME_DIR}"; then
# if [[ "$USER" != "root" ]] {
if [[ -z "${XDG_RUNTIME_DIR}" ]] || [[ "${XDG_RUNTIME_DIR}" != "/run/user/${UID}" ]] {
    XDG_RUNTIME_DIR="/run/user/${UID}"
    export XDG_RUNTIME_DIR="/run/user/${UID}"
    #   if ! test -d "${XDG_RUNTIME_DIR}"; then
    if ! [[ -d "${XDG_RUNTIME_DIR}" ]] || [[ "${XDG_RUNTIME_DIR}" != "/run/user/${UID}" ]] {
        doas mkdir -p "${XDG_RUNTIME_DIR}"
        doas chmod 0755 "${XDG_RUNTIME_DIR}"
        doas chown -R ${USER}:users "${XDG_RUNTIME_DIR}"
    }
}
# }


export MANPAGER='nvim +Man'
export MANPAGER='nvim +Man'
# export EDITOR='nvim'
export PATH=$HOME/.cargo/bin:$PATH

export PATH=/root/.local/share/cargo/bin:$PATH

# export $(dbus-launch)

if [ -f "${HOME}/.cargo/env" ]; then
    # source "${HOME}/.cargo/env"
    . "${HOME}/.cargo/env"
fi

# https://superuser.com/questions/852912/reload-all-running-zsh-instances
TRAPUSR1() {
    if [ -o INTERACTIVE ]; then
        {echo; echo execute a new shell instance } 1>&2
            exec "${SHELL}"
    fi
}

# export XKB_DEFAULT_LAYOUT=us,cn
export XKB_DEFAULT_LAYOUT=us
# export XKB_DEFAULT_VARIANT=us
# export XKB_DEFAULT_MODEL=pc105
export XKB_DEFAULT_MODEL=pc101
export XKB_DEFAULT_OPTIONS=grp:win_space_toggle


# vinit
export VINIT_HOME_DIR="${SHARE_PREFIX}/vinit"
# tinit
export TINIT_HOME_DIR="${SHARE_PREFIX}/tinit"
export TMUX_PLUGIN_MANAGER_PATH=${TINIT_HOME_DIR}/tmux/plugins
# export TMUX_DIR=$HOME/.tmux
export TMUX_DIR=${SHARE_PREFIX}/tinit/tmux
export XBPS_DISTDIR="${SHARE_PREFIX}/void-packages"
