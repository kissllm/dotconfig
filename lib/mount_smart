#! /bin/sh --

# mount_smart target source
[ -z "${IS_KISS+x}" ] &&
set -e ||
set -eE

trace_line() {
	local func_name="$1"
	local lineo="$2"
	echo "Error on function '$func_name' at '$lineo'"
}

[ -z "${IS_KISS+x}" ] ||
trap 'trace_line "$FUNCNAME" "$LINENO"' ERR || :

target_exists () {
	[ -z "${IS_KISS+x}" ] &&
		set -e || set -eE
	# trap 'trace_line "$FUNCNAME" "$LINENO"' ERR
	local des="$1"
	# echo "In target_exists, \$des = $des"
	# alredy_mounts="$(lsblk|grep $des | rev | cut -d" " -f1 | rev | tr '\n' ' ')"
	# https://stackoverflow.com/questions/9422461/check-if-directory-mounted-with-bash
	local found=0
	local result=1
	for I in $(mount | grep "$des" | awk "{print \$3}"); do
		[ "$I" != "$des" ] || found=$(( $found + 1 ))
	done
	[ "$found" -eq "0" ] || result=0
	echo "$des found $found time(s)" >&2

	return $result
}

# "src" mounted
src_mounted () {
	[ -z "${IS_KISS+x}" ] &&
		set -e || set -eE
	# trap 'trace_line "$FUNCNAME" "$LINENO"' ERR
	local src="${1:?"Must has first parameter"}"
	local result=1
	# [ -z "$src" ] && return "$result" ||
	[ -z "$(df "${src}" 2>/dev/null | grep -v "Filesystem" | \
		grep "${src}" | awk "{print \$1}")" ] || result=0
		# echo $(df ${src} | grep ${src} | awk '{print $1}')

	return $result
}

# "src" mounted and target match "des"
dev_mounted_target () {
	[ -z "${IS_KISS+x}" ] &&
		set -e || set -eE
	# trap 'trace_line "$FUNCNAME" "$LINENO"' ERR
	local des="${1:?"Must not empty"}"
	local src="${2:?"Must not empty"}"

	local des_mounted_target=
	local result=1

	# https://stackoverflow.com/questions/762631/find-out-if-a-command-exists-on-posix-system

	command -v findmnt > /dev/null && {
		# mapped=("${(@f)$(findmnt --kernel -n --list | \
		# grep -v '\[' | grep $src | awk '{print $1}')}")
		# util-linux
		mapped="$(findmnt --kernel -n --list | \
				grep -v '\[' | grep "$src" | awk "{print \$1}" | tr '\n' ' ')"

		for I in $mapped; do
			[ "$des" != '$I' ] || des_mounted_target="$des"
		done
	}

	[ -n "$des_mounted_target" ] ||
	des_mounted_target="$(df "${src}" 2>/dev/null | \
			grep -v "Filesystem" | grep "${src}" | awk "{print \$6}" | tr '\n' ' ')"

	[ "$des" != "$des_mounted_target" ] || result=0

	return $result
}

mount_smart () {
	[ -z "${IS_KISS+x}" ] &&
		set -e || set -eE
	local result=1
	# trap 'trace_line "$FUNCNAME" "$LINENO"' ERR
	local target="${1:?"Must not empty"}"
	local src="${2:?"Must not empty"}"
	[ -d "$target" ] || {
		mkdir -p "$target"
		chmod --quiet 0755 "$target"
	}
	src_mounted "$src" || { mount $src $target; return 0; }
	dev_mounted_target "$target" "$src" || {
		[ -z "${3}" ] && local option="-o bind" || local option="${3}"
		local des_mounted_target="$(df "${src}" 2>/dev/null | \
				grep -v "Filesystem" | grep "${src}" | awk "{print \$6}" | tr '\n' ' ')"
		mount $option $des_mounted_target $target && result=$?
		echo "src=$src, target=$target, binded"
	}

	return $result
}


