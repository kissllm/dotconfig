#!/usr/bin/env sh

# mount_smart target source

target_exists () {
    des=$1
    # echo "In target_exists, \$des = $des"
    # alredy_mounts="$(lsblk|grep $des | rev | cut -d" " -f1 | rev | tr '\n' ' ')"
    # https://stackoverflow.com/questions/9422461/check-if-directory-mounted-with-bash
    alredy_mounts=$(mount | grep $des)
    found=0
    [ "" != "$alredy_mounts" ] && {
        for I in $alredy_mounts;
        do
            [ "$I" = "$des" ] && found=$(( $found + 1 ))
        done
    }
    echo $found
}

src_mounted () {
    src=$1
    [ "" = $src ] && echo "" || {
        echo $(df ${src} | grep ${src} | awk '{print $1}')
    }
}

dev_mounted_target () {
    des=$1
    src=$2
    { [ "" = $src ] || [ "" = $des ]; } && echo "" || {

        # https://stackoverflow.com/questions/762631/find-out-if-a-command-exists-on-posix-system

        command -v findmnt > /dev/null && {

            # mapped=("${(@f)$(findmnt --kernel -n --list | grep -v '\[' | grep $src | awk '{print $1}')}")

            mapped="$(findmnt --kernel -n --list | grep -v '\[' | grep $src | awk '{print $1}' | tr '\n' ' ')"

            # https://stackoverflow.com/questions/3162385/how-to-split-a-string-in-shell-and-get-the-last-field
            # https://unix.stackexchange.com/questions/177138/how-do-i-test-if-an-item-is-in-a-bash-array
            # if ! (($mapped[(Ie)$des])); then
            #     des_mounted_target=$(df ${des} | grep ${des} | awk '{print $6}')
            # else
            #     des_mounted_target=$des
            # fi

            des_mounted_target=
            for I in $mapped;
            do
                [ "$des" = '$I' ] && des_mounted_target=$des
            done
            [ "" = "$des_mounted_target" ] && des_mounted_target=$(df ${des} | grep ${des} | awk '{print $6}')
            echo "$des_mounted_target";
        } || echo "findmnt not found"
    }
}

mount_smart () {
    target=$1
    src=$2
    [ -z "${3}" ] && option="-o bind" || option="${3}"
    { [ "" = $src ] || [ "" = $target ]; } && echo "Invalid input" || {
        old_target=$(dev_mounted_target $target $src)
        { [ "" = "$(src_mounted $src)" ] || [ "" = "$old_target" ]; } && {
            ! [ -d "$target" ] && {
                mkdir -p "$target"
                chmod --quiet 0755 "$target"
            }
            mount $src $target
        } || {
            [ "findmnt not found" != $old_target ] && {
                [ "$old_target" != "$target" ] && {
                    echo "src=$src, target=$target"
                    ! [ -d "$target" ] && {
                        mkdir -p "$target"
                        chmod --quiet 0755 "$target"
                    }
                    mount $option $old_target $target
                    echo "\r\n"
                }
            }
        }
    }
}
