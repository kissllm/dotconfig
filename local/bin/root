#!/bin/sh
# doas root /mnt/alpine /bin/ash
set -eE
trap 'trace_line "$FUNCNAME" "$LINENO"' ERR
# shellcheck source=/mnt/lib/mount_smart
. /mnt/lib/mount_smart
# des = /mnt/gentoo # or some absolute path

if [ -z $1 ] || [ ! -d "$1" ]; then
    echo "Please input absolute directory to chroot"
    exit 1
fi

des=$1
# echo "In chroot.sh, \$des = $des"

[ -z $2 ] || shell=$2

smart_rbind () {
    dir=$1
    # echo "In smart_rbind, \$des = $des"
    target_exists "$des/$dir" && [ -d "/$dir" ] && {
    # [ ! -d "$des/$dir" ] && {
        mount --rbind /$dir $des/$dir
        mount --make-rslave $des/$dir
    }
}

# cp -L /etc/resolv.conf $des/etc/
mount -t proc /proc $des/proc

# [ $(target_exists "$des/tmp") -eq 0 ] && {
#     mount --rbind /tmp $des/tmp
#     mount --make-rslave $des/tmp
# }

for I in sys sys/kernel/security dev dev/pts dev/shm run;
do
    smart_rbind "$I"
done

smart_rbind "tmp"

# mount --rbind /sys $des/sys
# mount --make-rslave $des/sys

# mount --rbind /dev $des/dev
# mount --make-rslave $des/dev

# mount --rbind /dev/pts $des/dev/pts
# mount --make-rslave $des/dev/pts

# test -L /dev/shm && rm /dev/shm && mkdir /dev/shm

# Out of date:
# mount --types tmpfs --options nosuid,nodev,noexec shm /dev/shm

mount -t tmpfs -o nosuid,nodev,noexec shm /dev/shm
chmod 1777 /dev/shm

# mount --rbind /dev/shm $des/dev/shm
# mount --make-rslave $des/dev/shm

# mount --rbind /run $des/run
# mount --make-rslave $des/run

mount --bind /sys/firmware/efi/efivars $des/sys/firmware/efi/efivars
# mount -o bind /sys/firmware/efi/efivars $des/sys/firmware/efi/efivars
# mount -t efivarfs /sys/firmware/efi/efivars $des/sys/firmware/efi/efivars
# smart_mount $des/sys/firmware/efi/efivars /sys/firmware/efi/efivars

# mount --rbind /sys/kernel/security $des/sys/kernel/security
# mount --make-rslave $des/sys/kernel/security

# chroot $des /bin/bash
# chroot $des $SHELL
# chroot $des /bin/env -i TERM=$TERM /bin/bash
# chroot $des /bin/env -i TERM=$TERM $SHELL

if ! [ -z $2 ]; then
    # env -i TERM=$TERM SHELL=/bin/bash HOME=$HOME $(which chroot) $des /bin/bash
    env -i TERM=$TERM SHELL=/bin/bash HOME=$HOME $(which chroot) $des $shell
else
    env -i TERM=$TERM SHELL=$(which sh) HOME=$HOME $(which chroot) $des /bin/env -i TERM=$TERM $SHELL
fi
# source /etc/profile
# gentoo
# env-update && source /etc/profile
# export PS1="(chroot) $PS1"
