#!/bin/sh
# doas root /mnt/alpine /bin/ash
des="${1:?"Must give a target path"}"

[ -z "${IS_KISS+x}"] && set -e || {
	set -eE
	trap 'trace_line "$FUNCNAME" "$LINENO"' ERR || :
}

# shellcheck source=/mnt/lib/mount_smart
. /mnt/lib/mount_smart
# des = /mnt/gentoo # or some absolute path

[ -d "$des" ] || {
	echo "Please input absolute directory to chroot to it"
	exit 1
}

# echo "In chroot.sh, \$des = $des"

[ -z "${2:+x}" ] || shell=$2

smart_rbind () {
	dir=$1
	[ -d  "$des/$dir" ] || \mkdir -p  "$des/$dir"
	# echo "In smart_rbind, \$des = $des"
	# target_exists "$des/$dir" || [ ! -d "/$dir" ] ||
	{
	# [ ! -d "$des/$dir" ] && {
		mount --rbind /$dir $des/$dir
		mount --make-rslave $des/$dir
	}
}

# cp -L /etc/resolv.conf $des/etc/
[ -d "$des/proc" ] || \mkdir -p " $des/proc"
# mount -t proc /proc $des/proc
		mount --rbind /proc $des/proc
		mount --make-rslave $des/proc

# [ $(target_exists "$des/tmp") -eq 0 ] && {
#     mount --rbind /tmp $des/tmp
#     mount --make-rslave $des/tmp
# }

for I in sys sys/kernel/security sys/dev/block dev dev/pts dev/shm run; do
	smart_rbind "$I"
done

# Will point to host "root_partition/tmp" if root does not have a seperate tmp device
# smart_rbind "tmp"

# mount --rbind /sys $des/sys
# mount --make-rslave $des/sys

# mount --rbind /dev $des/dev
# mount --make-rslave $des/dev

# mount --rbind /dev/pts $des/dev/pts
# mount --make-rslave $des/dev/pts

# test -L /dev/shm && rm /dev/shm && mkdir /dev/shm

# Out of date:
# mount --types tmpfs --options nosuid,nodev,noexec shm /dev/shm

mount -t tmpfs -o nosuid,nodev,noexec shm /dev/shm
chmod 1777 /dev/shm

# mount --rbind /dev/shm $des/dev/shm
# mount --make-rslave $des/dev/shm

# mount --rbind /run $des/run
# mount --make-rslave $des/run
[ -d "$des/sys/firmware/efi/efivars" ] || \mkdir -p "$des/sys/firmware/efi/efivars"
mount --rbind /sys/firmware/efi/efivars $des/sys/firmware/efi/efivars
mount --make-rslave $des/sys/firmware/efi/efivars
# mount -o bind /sys/firmware/efi/efivars $des/sys/firmware/efi/efivars
# mount -t efivarfs /sys/firmware/efi/efivars $des/sys/firmware/efi/efivars
# smart_mount $des/sys/firmware/efi/efivars /sys/firmware/efi/efivars

# mount --rbind /sys/kernel/security $des/sys/kernel/security
# mount --make-rslave $des/sys/kernel/security

# chroot $des /bin/bash
# chroot $des $SHELL
# chroot $des /bin/env -i TERM=$TERM /bin/bash
# chroot $des /bin/env -i TERM=$TERM $SHELL

if [ ! -z $2 ]; then
	# env -i TERM=$TERM SHELL=/bin/bash HOME=$HOME $(which chroot) $des /bin/bash
	env -i TERM=$TERM SHELL=/bin/bash HOME=$HOME $(which chroot) $des $shell
else
	env -i TERM=$TERM SHELL=$(which sh) HOME=$HOME $(which chroot) $des /bin/env -i TERM=$TERM $SHELL
fi
# . /etc/profile
# gentoo
# env-update && source /etc/profile
# export PS1="(chroot) $PS1"
