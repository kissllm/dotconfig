#!/usr/bin/env sh

# How to use:
# push master

# https://stackoverflow.com/questions/39518124/check-if-directory-is-git-repository-without-having-to-cd-into-it
# git -C <path> rev-parse
# git -C $REPO_DIR rev-parse 2>/dev/null
# if [ "$?" -ne 0 ]; then
#     echo "$REPO_DIR is not a git repository"
# fi
# if not git -C $REPO_DIR rev-parse 2>/dev/null;
#     echo $REPO_DIR is not a git repository;
# fi

# https://stackoverflow.com/questions/2180270/check-if-current-directory-is-a-git-repository
if [ "$(git rev-parse --is-inside-work-tree 2>/dev/null)" = "true" ]; then
    # https://stackoverflow.com/questions/5167957/is-there-a-better-way-to-find-out-if-a-local-git-branch-exists
    # BRANCH_NAME=mybranch
    # SHOW_ALL=`git show-branch --all | grep -w $BRANCH_NAME`
    # [ $? == 0 ] && echo "$BRANCH_NAME exists" || echo "$BRANCH_NAME not exists"
    # BRANCH_NAME=mybranch
    # if grep -Fqe $BRANCH_NAME << EOF
    # `git show-branch --all`
    # EOF
    # then
    #    echo "$BRANCH_NAME exists"
    # else
    #    echo "$BRANCH_NAME not exists"
    # fi

    # https://gist.github.com/tennisonchan/e00212e3ed5498060c50d390233a3e1f
    # https://dev.to/iridiumcao/how-to-check-if-a-git-branch-exists-in-the-local-remote-repository-3gkd
    # git ls-remote --heads origin dev | awk '{print $1}'
    # git rev-parse --verify --quiet dev
    if [ -z $1 ] || [ -z "$(git rev-parse --verify --quiet "$1")" ]; then
        echo "Please input a valid branch name"
        exit 1
    else
        branch="$1"
        remotes=$(git remote -v  | grep push | awk '{print $1}' | tr "\n" " ")
        for repo in $remotes; do
            [ "$repo" != "upstream" ] && {
                git push "$repo" "$branch"
            }
        done
    fi
else
    echo "Change directory to a git repository, please"
    exit 1
fi
